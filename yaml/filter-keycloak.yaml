---
# Basic OAuth filter
apiVersion: getambassador.io/v3alpha1
kind: Filter
metadata:
  name: keycloak-filter-quote
spec:
  OAuth2:
    authorizationURL: https://keycloak.amb-labs.io/auth/realms/blackbird
    audience: ambassador-labs
    clientID: ambassador-labs
    secret: 90cb0448-11b4-40e8-9f86-cc0f157eaf1e
    injectRequestHeaders:
    - name: "x-token-name"
      value: "{{ .token.Claims.name }}"
    protectedOrigins:
    - origin: https://example.amb-labs.io

---
# Filter for parsing a JWT access token
apiVersion: getambassador.io/v3alpha1
kind: Filter
metadata:
  name: keycloak-jwt-filter-quote
spec:
  JWT:
    injectRequestHeaders:
    - name: "x-token-name"
      value: "{{ .token.Claims.name }}"
    issuer: https://keycloak.amb-labs.io/auth/realms/blackbird
    jwksURI: https://keycloak.amb-labs.io/auth/realms/blackbird/protocol/openid-connect/certs

# ---
# # This filter connects to a service that takes the token in the Authorization header and makes a request to the id-token endpoint
# # Full installation details and source code at https://github.com/cakuros/ambassador-external-filter-userinfo
# apiVersion: getambassador.io/v2
# kind: Filter
# metadata:
#   name: external-filter-userinfo
# spec:
#   External:
#     auth_service: external-filter
#     allowed_authorization_headers:
#       - "x-userinfo-name"

---
apiVersion: getambassador.io/v3alpha1
kind: FilterPolicy
metadata:
  name: filter-policy
spec:
  rules:
    - host: "*"
      path: "*"
      filters:
        - name: keycloak-jwt-filter-quote
          onAllow: "break" # This onAllow/onDeny behavior allows for the fallthrough behavior such that a valid JWT will ignore the remaining filters after this one
          onDeny: "continue"
        - name: keycloak-filter-quote
        # - name: external-filter-userinfo
